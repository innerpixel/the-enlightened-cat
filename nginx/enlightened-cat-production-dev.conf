server {
    listen 443 ssl;
    server_name the-enlightened-cat.com www.the-enlightened-cat.com;

    # SSL config
    ssl_certificate /etc/letsencrypt/live/the-enlightened-cat.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/the-enlightened-cat.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Proxy to Rust backend
    location / {
        proxy_pass http://127.0.0.1:9000;  # <-- Your Rust app listening on 9000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Disable caching during development
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    # Static files with no caching during development
    location /static/ {
        alias /var/www/the-enlightened-cat/static/;
        
        # Disable caching during development
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
        
        # Ensure browser always revalidates
        etag off;
        if_modified_since off;
    }

    # Custom error pages
    error_page 404 /static/404.html;
    error_page 500 502 503 504 /static/50x.html;
}

server {
    listen 80;
    server_name the-enlightened-cat.com www.the-enlightened-cat.com;

    # Redirect all HTTP to HTTPS
    return 301 https://$host$request_uri;
}
